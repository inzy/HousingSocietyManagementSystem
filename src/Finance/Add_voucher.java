/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Finance;

import com.ezware.dialog.task.TaskDialogs;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.xnap.commons.gui.Dialogs;

/**
 *
 * @author RtrSuahantNadkar
 */
public class Add_voucher extends javax.swing.JFrame {

    JFrame parentFrame;
    ArrayList<String> cb1bkid = new ArrayList();
    ArrayList<String> acbkid = new ArrayList();
    java.awt.event.WindowEvent ev;

    /**
     * Creates new form Add_voucher
     */
    public Add_voucher() {
        initComponents();
    }

    public Add_voucher(JFrame frame) {
        initComponents();
        parentFrame = frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        cash_bank_code = new javax.swing.ButtonGroup();
        transaction_type = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        voucher_no = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cash = new javax.swing.JRadioButton();
        bank = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        account_code = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        voucher_date = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cheque_date = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        getContentPane().setLayout(layout);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.green);
        jLabel1.setText("Voucher Entry");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 43;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(jSeparator1, gridBagConstraints);

        jLabel2.setText("Voucher No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        voucher_no.setEditable(false);
        voucher_no.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        voucher_no.setEnabled(false);
        voucher_no.setFocusable(false);
        voucher_no.setMinimumSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(voucher_no, gridBagConstraints);

        jLabel3.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 36;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Cash/Bank Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        cash_bank_code.add(cash);
        cash.setText("Cash");
        cash.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cashItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(cash, gridBagConstraints);

        cash_bank_code.add(bank);
        bank.setText("Bank");
        bank.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bankItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(bank, gridBagConstraints);

        jButton1.setText("    OK    ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 40;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 15);
        getContentPane().add(jButton1, gridBagConstraints);

        jLabel5.setText("Paym/Rect/Contra");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        transaction_type.add(jRadioButton3);
        jRadioButton3.setText("Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(jRadioButton3, gridBagConstraints);

        transaction_type.add(jRadioButton4);
        jRadioButton4.setText("Rect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(jRadioButton4, gridBagConstraints);

        transaction_type.add(jRadioButton5);
        jRadioButton5.setText("Contra");
        jRadioButton5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton5ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(jRadioButton5, gridBagConstraints);

        jLabel6.setText("Account Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(account_code, gridBagConstraints);
        Others.AutoCompletion.createAndShowGUI(account_code);

        jLabel7.setText("Cheque Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(voucher_date, gridBagConstraints);

        jLabel8.setText("Cheque No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(jTextField2, gridBagConstraints);

        jLabel9.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(jTextField3, gridBagConstraints);

        jLabel10.setText("Member's Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel10, gridBagConstraints);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 38;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 5);
        getContentPane().add(jButton2, gridBagConstraints);

        jLabel11.setText("Voucher Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(cheque_date, gridBagConstraints);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 36;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 15);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel12.setText("Bank");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 0);
        getContentPane().add(jLabel12, gridBagConstraints);

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        getContentPane().add(jComboBox1, gridBagConstraints);
        Others.AutoCompletion.createAndShowGUI(jComboBox1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.gridwidth = 31;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 4, 0);
        getContentPane().add(jComboBox2, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // TODO add your handling code here:
            ev = evt;
            cash.setSelected(true);
            jRadioButton3.setSelected(true);
            Connection con = Others.Database.connect();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select code from account_code");
            account_code.removeAllItems();
            jComboBox1.removeAllItems();
            jComboBox2.removeAllItems();
            account_code.addItem("Select account code");
            jComboBox1.addItem("Select bank");
            jComboBox2.addItem("Select member's bank");
            while (rs.next()) {
                account_code.addItem(rs.getString("code"));
            }
            rs = st.executeQuery("select fid from flat");
            while (rs.next()) {
                account_code.addItem(rs.getString("fid"));
            }
            rs = st.executeQuery("select * from bank");
            while (rs.next()) {
                jComboBox1.addItem(rs.getString("name"));
                cb1bkid.add(rs.getString("bkid"));
            }
            rs = st.executeQuery("select * from member_bank");
            while (rs.next()) {
                jComboBox2.addItem(rs.getString("name"));
            }
            
            //to be removed later
            jRadioButton5.setEnabled(false);
        } catch (SQLException | ClassNotFoundException ex) {
            //Dialogs.showError(this, ex.getMessage(), ex);
            TaskDialogs.showException(ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void cashItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cashItemStateChanged
        // TODO add your handling code here:
        if (cash.isSelected() == true && jRadioButton5.isSelected() == false) {
            try {

                Connection con = Others.Database.connect();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select code from account_code");
                account_code.removeAllItems();
                account_code.addItem("Select account code");
                while (rs.next()) {
                    account_code.addItem(rs.getString("code"));
                }
                rs = st.executeQuery("select fid from flat");
                while (rs.next()) {
                    account_code.addItem(rs.getString("fid"));
                }
                con = Others.Database.connect();
                st = con.createStatement();
                rs = st.executeQuery("select max(voucher_no) from cash_book");
                rs.next();
                int vno = rs.getInt(1);
                vno += 1;
                voucher_no.setText(Integer.toString(vno));
                cheque_date.setEnabled(false);
                jTextField2.setEnabled(false);
                jComboBox2.setEnabled(false);
                jComboBox1.setEnabled(false);
            } catch (SQLException | ClassNotFoundException ex) {
                //TaskDialogs.showException(ex);
                Dialogs.showError(this, ex.getMessage(), ex);
            }
        } else if (cash.isSelected() == true && jRadioButton5.isSelected() == true) {
            try {
                Connection con = Others.Database.connect();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select * from bank");
                account_code.removeAllItems();
                account_code.addItem("Select account code");
                acbkid.clear();
                while (rs.next()) {
                    account_code.addItem(rs.getString("name"));
                    acbkid.add(rs.getString("bkid"));
                }
                cheque_date.setEnabled(false);
                jTextField2.setEnabled(false);
                jComboBox2.setEnabled(false);
                jComboBox1.setEnabled(false);                
            } catch (ClassNotFoundException | SQLException ex) {
                TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
            }
        }
    }//GEN-LAST:event_cashItemStateChanged

    private void bankItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bankItemStateChanged
        // TODO add your handling code here:
        if (bank.isSelected() == true && jRadioButton5.isSelected() == false) {
            try {
                Connection con = Others.Database.connect();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select max(voucher_no) from bank_book");
                rs.next();
                int vno = rs.getInt(1);
                vno += 1;
                voucher_no.setText(Integer.toString(vno));
                cheque_date.setEnabled(true);
                jTextField2.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox1.setEnabled(true);

            } catch (SQLException | ClassNotFoundException ex) {
                TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
            }
        } else if (bank.isSelected() == true && jRadioButton5.isSelected() == true) {
            try {
                Connection con = Others.Database.connect();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select max(voucher_no) from bank_book");
                rs.next();
                int vno = rs.getInt(1);
                vno += 1;
                voucher_no.setText(Integer.toString(vno));
                cheque_date.setEnabled(true);
                jTextField2.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox1.setEnabled(true);
                account_code.removeAllItems();
                account_code.addItem("Select account code");
                rs = st.executeQuery("select * from bank");
                acbkid.clear();
                while (rs.next()) {
                    if (!rs.getString("name").equals(jComboBox1.getSelectedItem().toString())) {
                        account_code.addItem(rs.getString("name"));
                        acbkid.add(rs.getString("bkid"));
                    }
                }
                account_code.addItem("CASH");
            } catch (SQLException | ClassNotFoundException ex) {
                TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
            }
        }
    }//GEN-LAST:event_bankItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        parentFrame.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        casd();
    }//GEN-LAST:event_jButton1ActionPerformed
    private void casd() {

        try {
            Connection con = Others.Database.connect();
            Statement st = con.createStatement();
            PreparedStatement ps;
            ResultSet rs;
            Matcher num = Others.Constant.NUM.matcher(voucher_no.getText() + jTextField2.getText() + jTextField3.getText());
            if (cash.isSelected() && jRadioButton3.isSelected()) {
                if (!voucher_date.getDate().toString().equals("") && !voucher_no.getText().equals("") && !account_code.getSelectedItem().toString().equals("Select account code") && !jTextField3.getText().equals("")) {
                    if (num.matches()) {
                        //TODO code here cash book payment
                        //1st effect
                        Date dd = voucher_date.getDate();
                        SimpleDateFormat sdf = new SimpleDateFormat("ddmmyyyy");
                        String strDate = sdf.format(dd);
                        java.util.Date date = sdf.parse(strDate);
                        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                        ps = con.prepareStatement("insert into cash_book values(?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, account_code.getSelectedItem().toString());
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setString(5, "P");
                        ps.setInt(6, Integer.parseInt(jTextField3.getText()));
                        ps.execute();
                        //2nd effect
                        /*ps = con.prepareStatement("insert into cash_book values(?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()) + 1);
                        ps.setDate(2, sqlDate);
                        ps.setString(3, "CASH");
                        ps.setString(4, jTextArea1.getText().equals("") ? "" : jTextArea1.getText());
                        ps.setString(5, "R");
                        ps.setInt(6, Integer.parseInt(jTextField3.getText()));
                        ps.execute();*/
                        if (ps.getUpdateCount() > 0) {
                            JOptionPane.showMessageDialog(parentFrame, "Record entered");
                            jComboBox1.setSelectedIndex(0);
                            jComboBox2.setSelectedIndex(0);
                            account_code.setSelectedIndex(0);
                            voucher_no.setText("");
                            jTextField2.setText("");
                            jTextField3.setText("");
                            jTextArea1.setText("");
                            voucher_date.setDate(null);
                            cheque_date.setDate(null);
                            formWindowOpened(ev);
                            rs = st.executeQuery("select max(voucher_no) from bank_book");
                            rs.next();
                            int vno = rs.getInt(1);
                            vno += 1;
                            voucher_no.setText(Integer.toString(vno));
                        } else {
                            JOptionPane.showMessageDialog(parentFrame, "Some error occured");
                        }
                    } else {
                        JOptionPane.showMessageDialog(parentFrame, "Voucher no., cheque no. and amount must be numeric");
                    }
                } else {
                    JOptionPane.showMessageDialog(parentFrame, "All fields are mandatory");
                }
            } else if (cash.isSelected() && jRadioButton4.isSelected()) {
                if (!voucher_date.getDate().toString().equals("") && !voucher_no.getText().equals("") && !account_code.getSelectedItem().toString().equals("Select account code") && !jTextField3.getText().equals("")) {
                    if (num.matches()) {
                        //TODO code here cash book received
                        //1st effect
                        Date dd = voucher_date.getDate();
                        SimpleDateFormat sdf = new SimpleDateFormat("ddmmyyyy");
                        String strDate = sdf.format(dd);
                        java.util.Date date = sdf.parse(strDate);
                        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                        ps = con.prepareStatement("insert into cash_book values(?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, "CASH");
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setString(5, "R");
                        ps.setInt(6, Integer.parseInt(jTextField3.getText()));
                        ps.execute();
                        //2nd effect 
                        /*ps = con.prepareStatement("insert into cash_book values(?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()) + 1);
                        ps.setDate(2, sqlDate);
                        ps.setString(3, account_code.getSelectedItem().toString());
                        ps.setString(4, jTextArea1.getText().equals("") ? "" : jTextArea1.getText());
                        ps.setString(5, "P");
                        ps.setInt(6, Integer.parseInt(jTextField3.getText()));
                        ps.execute();*/
                        if (ps.getUpdateCount() > 0) {
                            JOptionPane.showMessageDialog(parentFrame, "Record entered");
                            jComboBox1.setSelectedIndex(0);
                            jComboBox2.setSelectedIndex(0);
                            account_code.setSelectedIndex(0);
                            voucher_no.setText("");
                            jTextField2.setText("");
                            jTextField3.setText("");
                            jTextArea1.setText("");
                            voucher_date.setDate(null);
                            cheque_date.setDate(null);
                            formWindowOpened(ev);
                            rs = st.executeQuery("select max(voucher_no) from bank_book");
                            rs.next();
                            int vno = rs.getInt(1);
                            vno += 1;
                            voucher_no.setText(Integer.toString(vno));
                        } else {
                            JOptionPane.showMessageDialog(parentFrame, "Some error occured");
                        }
                    } else {
                        JOptionPane.showMessageDialog(parentFrame, "Voucher no., cheque no. and amount must be numeric");
                    }
                } else {
                    JOptionPane.showMessageDialog(parentFrame, "All fields are mandatory");
                }
            } else if (cash.isSelected() && jRadioButton5.isSelected()) {
                /*if (!voucher_date.getDate().toString().equals("") && !voucher_no.getText().equals("") && !account_code.getSelectedItem().toString().equals("Select account code") && !jTextField3.getText().equals("")) {
                    if (num.matches()) {
                        //TODO code here cash book contra
                        //1st effect
                        ps = con.prepareStatement("insert into cash_book values(?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()) + 1);
                        Date dd = voucher_date.getDate();
                        SimpleDateFormat sdf = new SimpleDateFormat("ddmmyyyy");
                        String strDate = sdf.format(dd);
                        java.util.Date date = sdf.parse(strDate);
                        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                        ps.setDate(2, sqlDate);
                        ps.setString(3, account_code.getSelectedItem().toString());
                        ps.setString(4, jTextArea1.getText().equals("") ? "" : jTextArea1.getText());
                        ps.setString(5, "P");
                        ps.setInt(6, Integer.parseInt(jTextField3.getText()));
                        ps.execute();
                        //2nd effect
                        ps = con.prepareStatement("insert into bank_book values(?,?,?,?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, acbkid.get(account_code.getSelectedIndex()-1));
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setInt(5, 0);
                        ps.setDate(6, null);
                        ps.setString(7, "R");
                        ps.setString(8, "");
                        ps.setInt(9, Integer.parseInt(jTextField3.getText()));
                        ps.execute();
                        if (ps.getUpdateCount() > 0) {
                            JOptionPane.showMessageDialog(parentFrame, "Record entered");
                            jComboBox1.setSelectedIndex(0);
                            jComboBox2.setSelectedIndex(0);
                            account_code.setSelectedIndex(0);
                            voucher_no.setText("");
                            jTextField2.setText("");
                            jTextField3.setText("");
                            jTextArea1.setText("");
                            voucher_date.setDate(null);
                            cheque_date.setDate(null);
                            formWindowOpened(ev);
                            rs = st.executeQuery("select max(voucher_no) from bank_book");
                            rs.next();
                            int vno = rs.getInt(1);
                            vno += 1;
                            voucher_no.setText(Integer.toString(vno));
                        } else {
                            JOptionPane.showMessageDialog(parentFrame, "Some error occured");
                        }
                    } else {
                        JOptionPane.showMessageDialog(parentFrame, "Voucher no., cheque no. and amount must be numeric");
                    }
                } else {
                    JOptionPane.showMessageDialog(parentFrame, "All fields are mandatory");
                }*/
            } else if (bank.isSelected() && jRadioButton3.isSelected()) {
                if (!voucher_date.getDate().toString().equals("") && !voucher_no.getText().equals("") && !account_code.getSelectedItem().toString().equals("Select account code") && !jTextField2.getText().equals("") && !jTextField3.getText().equals("") && !jComboBox2.getSelectedItem().toString().equals("Select member's bank") && !jComboBox1.getSelectedItem().toString().equals("Select bank")) {
                    if (num.matches()) {
                        //TODO code here bank book payment
                        //1st effect
                        Date dd = voucher_date.getDate();
                        SimpleDateFormat sdf = new SimpleDateFormat("ddmmyyyy");
                        String strDate = sdf.format(dd);
                        java.util.Date date = sdf.parse(strDate);
                        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                        ps = con.prepareStatement("insert into bank_book values(?,?,?,?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, account_code.getSelectedItem().toString());
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setInt(5, Integer.parseInt(jTextField2.getText()));
                        dd = cheque_date.getDate();
                        sdf = new SimpleDateFormat("ddmmyyyy");
                        strDate = sdf.format(dd);
                        date = sdf.parse(strDate);
                        sqlDate = new java.sql.Date(date.getTime());
                        ps.setDate(6, sqlDate);
                        ps.setString(7, "P");
                        ps.setString(8, cb1bkid.get(jComboBox1.getSelectedIndex()));
                        ps.setInt(9, Integer.parseInt(jTextField3.getText()));
                        ps.execute();
                        //2nd effect
                        /*ps = con.prepareStatement("insert into bank_book values(?,?,?,?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, account_code.getSelectedItem().toString());
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setInt(5, Integer.parseInt(jTextField2.getText()));
                        dd = cheque_date.getDate();
                        sdf = new SimpleDateFormat("ddmmyyyy");
                        strDate = sdf.format(dd);
                        date = sdf.parse(strDate);
                        sqlDate = new java.sql.Date(date.getTime());
                        ps.setDate(6, sqlDate);
                        ps.setString(7, "R");
                        ps.setString(8, jComboBox2.getSelectedItem().toString());
                        ps.setInt(9, Integer.parseInt(jTextField3.getText()));
                        ps.execute();*/
                        if (ps.getUpdateCount() > 0) {
                            JOptionPane.showMessageDialog(parentFrame, "Record entered");
                            jComboBox1.setSelectedIndex(0);
                            jComboBox2.setSelectedIndex(0);
                            account_code.setSelectedIndex(0);
                            voucher_no.setText("");
                            jTextField2.setText("");
                            jTextField3.setText("");
                            jTextArea1.setText("");
                            voucher_date.setDate(null);
                            cheque_date.setDate(null);
                            formWindowOpened(ev);
                            rs = st.executeQuery("select max(voucher_no) from bank_book");
                            rs.next();
                            int vno = rs.getInt(1);
                            vno += 1;
                            voucher_no.setText(Integer.toString(vno));
                        } else {
                            JOptionPane.showMessageDialog(parentFrame, "Some error occured");
                        }
                    } else {
                        JOptionPane.showMessageDialog(parentFrame, "Voucher no., cheque no. and amount must be numeric");
                    }
                } else {
                    JOptionPane.showMessageDialog(parentFrame, "All fields are mandatory");
                }
            } else if (bank.isSelected() && jRadioButton4.isSelected()) {
                if (!voucher_date.getDate().toString().equals("") && !voucher_no.getText().equals("") && !account_code.getSelectedItem().toString().equals("Select account code") && !jTextField2.getText().equals("") && !jTextField3.getText().equals("") && !jComboBox2.getSelectedItem().toString().equals("Select member's bank") && !jComboBox1.getSelectedItem().toString().equals("Select bank")) {
                    if (num.matches()) {
                        //TODO code here bank book received
                        //1st effect
                        Date dd = voucher_date.getDate();
                        SimpleDateFormat sdf = new SimpleDateFormat("ddmmyyyy");
                        String strDate = sdf.format(dd);
                        java.util.Date date = sdf.parse(strDate);
                        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                        ps = con.prepareStatement("insert into bank_book values(?,?,?,?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, account_code.getSelectedItem().toString());
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setInt(5, Integer.parseInt(jTextField2.getText()));
                        dd = cheque_date.getDate();
                        sdf = new SimpleDateFormat("ddmmyyyy");
                        strDate = sdf.format(dd);
                        date = sdf.parse(strDate);
                        sqlDate = new java.sql.Date(date.getTime());
                        ps.setDate(6, sqlDate);
                        ps.setString(7, "R");
                        ps.setString(8, cb1bkid.get(jComboBox1.getSelectedIndex()));
                        ps.setInt(9, Integer.parseInt(jTextField3.getText()));
                        ps.execute();
                        //2nd effect
                        /*ps = con.prepareStatement("insert into bank_book values(?,?,?,?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, account_code.getSelectedItem().toString());
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setInt(5, Integer.parseInt(jTextField2.getText()));
                        dd = cheque_date.getDate();
                        sdf = new SimpleDateFormat("ddmmyyyy");
                        strDate = sdf.format(dd);
                        date = sdf.parse(strDate);
                        sqlDate = new java.sql.Date(date.getTime());
                        ps.setDate(6, sqlDate);
                        ps.setString(7, "P");
                        ps.setString(8, jComboBox2.getSelectedItem().toString());
                        ps.setInt(9, Integer.parseInt(jTextField3.getText()));
                        ps.execute();*/
                        if (ps.getUpdateCount() > 0) {
                            JOptionPane.showMessageDialog(parentFrame, "Record entered");
                            jComboBox1.setSelectedIndex(0);
                            jComboBox2.setSelectedIndex(0);
                            account_code.setSelectedIndex(0);
                            voucher_no.setText("");
                            jTextField2.setText("");
                            jTextField3.setText("");
                            jTextArea1.setText("");
                            voucher_date.setDate(null);
                            cheque_date.setDate(null);
                            formWindowOpened(ev);
                            rs = st.executeQuery("select max(voucher_no) from bank_book");
                            rs.next();
                            int vno = rs.getInt(1);
                            vno += 1;
                            voucher_no.setText(Integer.toString(vno));
                        } else {
                            JOptionPane.showMessageDialog(parentFrame, "Some error occured");
                        }
                    } else {
                        JOptionPane.showMessageDialog(parentFrame, "Voucher no., cheque no. and amount must be numeric");
                    }
                } else {
                    JOptionPane.showMessageDialog(parentFrame, "All fields are mandatory");
                }
            } /*else if (bank.isSelected() && jRadioButton5.isSelected()) {
                if (!voucher_date.getDate().toString().equals("") && !voucher_no.getText().equals("") && !account_code.getSelectedItem().toString().equals("Select account code") && !jTextField2.getText().equals("") && !jTextField3.getText().equals("") && !jComboBox2.getSelectedItem().toString().equals("Select member's bank") && !jComboBox1.getSelectedItem().toString().equals("Select bank")) {
                    if (num.matches()) {
                        //TODO code here bank book contra
                        //1st effect
                        Date dd = voucher_date.getDate();
                        SimpleDateFormat sdf = new SimpleDateFormat("ddmmyyyy");
                        String strDate = sdf.format(dd);
                        java.util.Date date = sdf.parse(strDate);
                        java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                        ps = con.prepareStatement("insert into bank_book values(?,?,?,?,?,?,?,?,?)");
                        ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                        ps.setDate(2, sqlDate);
                        ps.setString(3, acbkid.get(account_code.getSelectedIndex()-1));
                        ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                        ps.setInt(5, Integer.parseInt(jTextField2.getText()));
                        dd = cheque_date.getDate();
                        sdf = new SimpleDateFormat("ddmmyyyy");
                        strDate = sdf.format(dd);
                        date = sdf.parse(strDate);
                        sqlDate = new java.sql.Date(date.getTime());
                        ps.setDate(6, sqlDate);
                        ps.setString(7, "P");
                        ps.setString(8, cb1bkid.get(jComboBox1.getSelectedIndex()));
                        ps.setInt(9, Integer.parseInt(jTextField3.getText()));
                        ps.execute();
                        //2nd effect
                        if ("CASH".equals(account_code.getSelectedItem().toString())) {
                            dd = voucher_date.getDate();
                            sdf = new SimpleDateFormat("ddmmyyyy");
                            strDate = sdf.format(dd);
                            date = sdf.parse(strDate);
                            sqlDate = new java.sql.Date(date.getTime());
                            ps = con.prepareStatement("insert into cash_book values(?,?,?,?,?,?)");
                            ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                            ps.setDate(2, sqlDate);
                            ps.setString(3, "CASH");
                            ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                            ps.setString(5, "R");
                            ps.setInt(6, Integer.parseInt(jTextField3.getText()));
                            ps.execute();
                            if (ps.getUpdateCount() > 0) {
                                JOptionPane.showMessageDialog(parentFrame, "Record entered");
                                jComboBox1.setSelectedIndex(0);
                                jComboBox2.setSelectedIndex(0);
                                account_code.setSelectedIndex(0);
                                voucher_no.setText("");
                                jTextField2.setText("");
                                jTextField3.setText("");
                                jTextArea1.setText("");
                                voucher_date.setDate(null);
                                cheque_date.setDate(null);
                                formWindowOpened(ev);
                                rs = st.executeQuery("select max(voucher_no) from bank_book");
                                rs.next();
                                int vno = rs.getInt(1);
                                vno += 1;
                                voucher_no.setText(Integer.toString(vno));
                            } else {
                                JOptionPane.showMessageDialog(parentFrame, "Some error occured");
                            }
                        } else if (!"CASH".equals(account_code.getSelectedItem().toString())) {
                            dd = voucher_date.getDate();
                            sdf = new SimpleDateFormat("ddmmyyyy");
                            strDate = sdf.format(dd);
                            date = sdf.parse(strDate);
                            sqlDate = new java.sql.Date(date.getTime());
                            ps = con.prepareStatement("insert into bank_book values(?,?,?,?,?,?,?,?,?)");
                            ps.setInt(1, Integer.parseInt(voucher_no.getText()));
                            ps.setDate(2, sqlDate);
                            ps.setString(3, acbkid.get(account_code.getSelectedIndex()-1));
                            ps.setString(4, jTextArea1.getText().equals("") ? " " : jTextArea1.getText());
                            ps.setInt(5, Integer.parseInt(jTextField2.getText()));
                            dd = cheque_date.getDate();
                            sdf = new SimpleDateFormat("ddmmyyyy");
                            strDate = sdf.format(dd);
                            date = sdf.parse(strDate);
                            sqlDate = new java.sql.Date(date.getTime());
                            ps.setDate(6, sqlDate);
                            ps.setString(7, "R");
                            ps.setString(8, cb1bkid.get(jComboBox1.getSelectedIndex()));
                            ps.setInt(9, Integer.parseInt(jTextField3.getText()));
                            ps.execute();
                            if (ps.getUpdateCount() > 0) {
                                JOptionPane.showMessageDialog(parentFrame, "Record entered");
                                jComboBox1.setSelectedIndex(0);
                                jComboBox2.setSelectedIndex(0);
                                account_code.setSelectedIndex(0);
                                voucher_no.setText("");
                                jTextField2.setText("");
                                jTextField3.setText("");
                                jTextArea1.setText("");
                                voucher_date.setDate(null);
                                cheque_date.setDate(null);
                                formWindowOpened(ev);
                                rs = st.executeQuery("select max(voucher_no) from bank_book");
                                rs.next();
                                int vno = rs.getInt(1);
                                vno += 1;
                                voucher_no.setText(Integer.toString(vno));
                            } else {
                                JOptionPane.showMessageDialog(parentFrame, "Some error occured");
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(parentFrame, "Voucher no., cheque no. and amount must be numeric");
                    }
                } else {
                    JOptionPane.showMessageDialog(parentFrame, "All fields are mandatory");
                }
            }*/
        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
        }
    }
    private void jRadioButton5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton5ItemStateChanged
        // TODO add your handling code here:
        if (jRadioButton5.isSelected() == true) {
            if (cash.isSelected()) {
                try {
                    Connection con = Others.Database.connect();
                    Statement st = con.createStatement();
                    ResultSet rs = st.executeQuery("select * from bank");
                    account_code.removeAllItems();
                    acbkid.clear();
                    account_code.addItem("Select account code");
                    while (rs.next()) {
                        account_code.addItem(rs.getString("name"));
                        acbkid.add(rs.getString("bkid"));
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
                }

            } else if (bank.isSelected()) {
                try {
                    Connection con = Others.Database.connect();
                    Statement st = con.createStatement();
                    ResultSet rs;
                    account_code.removeAllItems();
                    account_code.addItem("Select account code");
                    account_code.addItem("CASH");
                    rs = st.executeQuery("select * from bank");
                    acbkid.clear();
                    while (rs.next()) {
                        if (!rs.getString("name").equals(jComboBox1.getSelectedItem().toString())) {
                            account_code.addItem(rs.getString("name"));
                            acbkid.add(rs.getString("bkid"));
                        }
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
                }
            } else {

            }
        } else if (jRadioButton5.isSelected() == false) {
            try {
                account_code.removeAllItems();
                //cash.setSelected(true);jRadioButton3.setSelected(true);
                Connection con = Others.Database.connect();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select code from account_code");
                account_code.addItem("Select account code");
                while (rs.next()) {
                    account_code.addItem(rs.getString("code"));
                }
                rs = st.executeQuery("select fid from flat");
                while (rs.next()) {
                    account_code.addItem(rs.getString("fid"));
                }
            } catch (SQLException | ClassNotFoundException ex) {
                TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
            }

        }
    }//GEN-LAST:event_jRadioButton5ItemStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (bank.isSelected() == true && jRadioButton5.isSelected() == true) {
            if (evt.getStateChange() == ItemEvent.SELECTED) {
                try {
                    Connection con = Others.Database.connect();
                    Statement st = con.createStatement();
                    ResultSet rs;
                    account_code.removeAllItems();
                    account_code.addItem("Select account code");
                    account_code.addItem("CASH");
                    rs = st.executeQuery("select * from bank");
                    acbkid.clear();
                    while (rs.next()) {
                        if (!rs.getString("name").equals(jComboBox1.getSelectedItem().toString())) {
                            account_code.addItem(rs.getString("name"));
                            acbkid.add(rs.getString("bkid"));
                        }
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    TaskDialogs.showException(ex);//Dialogs.showError(this, ex.getMessage(), ex);
                }
            }
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_voucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_voucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_voucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_voucher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Add_voucher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox account_code;
    private javax.swing.JRadioButton bank;
    private javax.swing.JRadioButton cash;
    private javax.swing.ButtonGroup cash_bank_code;
    private com.toedter.calendar.JDateChooser cheque_date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.ButtonGroup transaction_type;
    private com.toedter.calendar.JDateChooser voucher_date;
    private javax.swing.JTextField voucher_no;
    // End of variables declaration//GEN-END:variables
}
